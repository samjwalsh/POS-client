:root {
  --headerHeight: 2.75rem;

  --categoryFont: "Inter";
  --categoryFontWeight: 600;
  --categoryFontSize: 1.5rem;
  --categoryWidth: 8rem;
  --categoryMinWidth: 12rem;
  --categoryMinHeight: 7rem;
  --standardMargin: 0.5rem;

  --titleFont: "Inter";
  --titleFontSize: 1.5rem;
  --titleFontWeight: 1000;
  --headerColour: rgb(255, 108, 108);

  --borderStyle: solid black;
  --borderStyled: solid 1px red;

  --backgroundColour: rgb(255, 255, 255);

  overflow: hidden;
}

@font-face {
  font-family: Inter;
  src: url(./assets/Inter.ttf);
}

html {
  font-size: 16px;
  font-family: Inter;
}

* {
  padding: 0rem;
  margin: 0rem;
  user-select: none;
  background-color: var(--backgroundColour);
}

.container {
  display: grid;
  grid-template-areas:
    "menuBar orderTitle"
    "menu order";
  grid-template-columns: auto 35%;
  grid-template-rows: auto calc(100vh - var(--headerHeight));
  height: 100%;
}

#menuBar {
  height: var(--headerHeight);
  border: var(--borderStyle);
  border-right: hidden;
  border-bottom: hidden;
  display: grid;
  grid-template-areas: "hamburgerIcon menuTitle menuFiller";
  grid-template-columns: min-content 1fr min-content;

  text-align: center;
  font-family: var(--titleFont);
  font-size: var(--titleFontSize);
  font-weight: var(--titleFontWeight);
}

#hamburgerIcon {
  background-color: var(--backgroundColour);
  border-right: var(--borderStyle);
  grid-area: hamburgerIcon;
  text-align: left;
  padding-left: var(--standardMargin);
  padding-right: var(--standardMargin);

  align-items: center;
  display: flex;
  flex-direction: column;
  justify-content: center;

  flex: 1;
}

#hamburgerSVG {
  background-color: var(--backgroundColour);

  height: 2.5rem;
  width: 2.5rem;
}

#menuTitle {
  background-color: var(--headerColour);

  grid-area: menuTitle;
  align-items: center;
  display: flex;
  flex-direction: column;
  justify-content: center;

  flex: 1;
}

#menuFiller {
  background-color: var(--headerColour);
  width: 3.5rem;
  grid-area: menuFiller;
}

#menu {
  border: var(--borderStyle);
  border-right: hidden;
}

#sideMenu {
  width: 100%;
  height: 100%;
  z-index: 1000;
  position: absolute;

  display: grid;
  grid-template-areas: "sideMenuContent sideMenuBackground";

  grid-template-columns: 25% auto;
  background-color: transparent;
}

#sideMenuContent {
  grid-area: "sideMenuContent";
  border: var(--borderStyle);

  display: grid;
  grid-template-areas:
    "sideMenuClose"
    "sideMenuOptions"
    "sideMenuTerminate";

  grid-template-rows: min-content auto min-content;
}

#sideMenuClose {
  display: grid;
  grid-template-areas: "sideMenuCloseText sideMenuCloseButton";
  grid-template-columns: auto min-content;

  /* grid-gap: var(--standardMargin); */
  border-bottom: var(--borderStyle);

  align-items: center;
}

#sideMenuCloseText {
  grid-area: sideMenuCloseText;
  font-size: 1.8rem;
  font-weight: var(--titleFontWeight);
  font-family: var(--titleFont);
  text-align: left;
  padding-left: var(--standardMargin);
  height: 100%;

  display: flex;
  flex-direction: column;
  justify-content: center;

  flex: 1;

  background-color: var(--headerColour);
}

#sideMenuCloseButton {
  height: var(--headerHeight);
  grid-area: sideMenuCloseButton;
  margin-left: auto;
  margin-right: 0;
  text-align: center;
  width: 1.5rem;
  font-family: var(--titleFont);
  font-weight: var(--categoryFontWeight);
  font-size: 2rem;
  padding: 0 var(--standardMargin) 0 var(--standardMargin);

  border-left: var(--borderStyle);

  align-items: center;
  display: flex;
  flex-direction: column;
  justify-content: center;

  flex: 1;
}

#sideMenuOptions {
  display: flex;
  flex-direction: column;
  padding: var(--standardMargin);
  border-bottom: var(--borderStyle);
}

.sideMenuOption {
  font-size: 2rem;
  font-weight: var(--categoryFontWeight);
  font-family: var(--categoryFont);
  text-align: left;
  border: var(--borderStyle);
  margin-bottom: var(--standardMargin);
  padding-left: var(--standardMargin);
}

#sideMenuBackground {
  grid-area: "sideMenuBackground";

  background-color: rgba(0, 0, 0, 0.5);
}

#sideMenuTerminate {
  padding: var(--standardMargin);
}

#sideMenuTerminateText {
  font-size: 2rem;
  font-weight: var(--categoryFontWeight);
  font-family: var(--categoryFont);
  text-align: left;
  border: var(--borderStyle);
  padding-left: var(--standardMargin);
}

.items {
  max-height: calc(100%);

  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  overflow: hidden;
  overflow-y: scroll;
}

.items::after {
  content: "";
  flex: auto;
}

::-webkit-scrollbar {
  display: none;
}

.listItem {
  border: var(--borderStyle);
  font-family: var(--categoryFont);
  font-weight: var(--categoryFontWeight);
  font-size: var(--titleFontSize);
  text-align: center;
  word-break: break-word;

  max-width: var(--categoryWidth);
  min-width: var(--categoryMinWidth);
  height: var(--categoryMinHeight);
  min-height: var(--categoryMinHeight);
  margin: var(--standardMargin);

  /* Centers the text */
  align-items: center;
  display: flex;
  flex-direction: column;
  justify-content: center;

  flex: 1;
}

.listItem:hover {
  cursor: pointer;
}

.emptyDiv {
  border: var(--borderStyle);
  border-top: none;
  border-bottom: none;
  font-family: var(--categoryFont);
  font-weight: var(--categoryFontWeight);
  font-size: var(--titleFontSize);
  text-align: center;
  word-break: break-word;

  max-width: var(--categoryWidth);
  min-width: var(--categoryMinWidth);
  height: 0rem;
  margin: var(--standardMargin);
  margin-top: 0rem;
  margin-bottom: 0rem;

  /* Centers the text */
  align-items: center;
  display: flex;
  flex-direction: column;
  justify-content: center;

  flex: 1;
}

.backButton {
  background-color: var(--headerColour);
}

.itemPage {
  display: grid;
  grid-template-areas:
    "titleBar"
    "addons"
    "bottomBar";
  grid-template-rows: min-content auto min-content;
  height: 100%;
}

.itemPageTitleBar {
  grid-area: titleBar;
  display: grid;
  grid-template-areas: "title exitButton";
  height: min-content;
}

.itemPageAddonsTitle {
  grid-area: title;
  margin-top: auto;
  margin-bottom: var(--standardMargin);
  margin-left: var(--standardMargin);
}

.itemPageTitleCenter {
  font-family: var(--titleFont);
  font-size: 2rem;
  font-weight: var(--titleFontWeight);
  display: flex;
}

.itemPageExitButton {
  display: inline-block;
  grid-area: exitButton;
  font-family: var(--titleFont);
  font-size: var(--titleFontSize);
  font-weight: var(--titleFontWeight);
  border: var(--borderStyle);
  margin: var(--standardMargin);

  margin-left: auto;
  width: min-content;
  text-align: right;

  padding: var(--standardMargin) 1rem var(--standardMargin) 1rem;
}

.itemPageExitButton:hover {
  cursor: pointer;
}

.itemPageAddonsSection {
  grid-area: addons;
  border: var(--borderStyle);
  margin: 0rem var(--standardMargin) 0rem var(--standardMargin);
  display: flex;
  flex-direction: column;
  padding-top: var(--standardMargin);
  height: auto;
  overflow: hidden;
  overflow-y: scroll;
}

.addon {
  border: var(--borderStyle);
  width: auto;
  margin: 0rem var(--standardMargin) var(--standardMargin) var(--standardMargin);
  height: 4rem;
  display: grid;
  grid-template-areas: "addonNameAndPrice toggle";
  grid-template-columns: min-content auto;
  font-family: var(--categoryFont);
  font-weight: var(--categoryFontWeight);
  justify-content: stretch;
}

.addonNameAndPrice {
  grid-area: addonNameAndPrice;
  display: grid;
  grid-template-areas: "addonName addonPrice";
  grid-template-columns: min-content min-content;
  align-items: center;
  justify-items: center;
  margin: var(--standardMargin);
}

.addonName {
  grid-area: addonName;
  font-size: 2rem;
  width: min-content;
  white-space: nowrap;

  display: flex;
}

.addonPrice {
  grid-area: addonPrice;
  font-style: var(--categoryFont);
  font-size: 1.2rem;
  width: min-content;
  /* push text to bottom */
  display: flex;
  padding-top: 0.5rem;
  margin-left: var(--standardMargin);
}

.addonText {
  align-self: flex-end;
}

.toggleAddon {
  grid-area: toggle;
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.toggleAddonButton {
  font-size: 2rem;
  font-weight: var(--categoryFontWeight);
  border: var(--borderStyle);
  margin-right: var(--standardMargin);
  height: 2.5rem;
  text-align: center;
  width: 2.5rem;
}

.toggleAddonButton:hover {
  cursor: pointer;
}

.bottomBar {
  grid-area: bottomBar;
  border: var(--borderStyle);
  border-top: none;
  margin: 0rem var(--standardMargin) var(--standardMargin) var(--standardMargin);
  height: 4rem;
  display: grid;
  grid-template-areas: "quantitySection priceSection orderAdd";
  grid-template-columns: min-content auto min-content;

  font-family: var(--categoryFont);
  font-weight: var(--categoryFontWeight);
  font-size: 2rem;
}

.quantitySection {
  grid-area: quantitySection;
  display: grid;
  grid-template-areas: "subtractQuantity quantityValue addQuantity";
  margin: var(--standardMargin);
  border: var(--borderStyle);
  text-align: center;
  align-items: center;
  width: min-content;
  grid-template-columns: 3rem 3rem 3rem;
}

.subtractQuantity {
  grid-area: subtractQuantity;
  border-right: var(--borderStyle);
  display: grid;
  align-self: center;
  height: 100%;
}

.quantityValue {
  grid-area: quantityValue;
  display: grid;
}

.addQuantity {
  grid-area: addQuantity;
  display: grid;
  border-left: var(--borderStyle);
  height: 100%;
}

.priceSection {
  grid-area: priceSection;
  border: var(--borderStyle);
  position: relative;
  margin: var(--standardMargin);
  margin-left: 0rem;
  width: auto;
  min-width: 8rem;
}

.priceContainer {
  margin: 0;
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
  left: 50%;
}

.orderAdd {
  grid-area: orderAdd;
  border: var(--borderStyle);
  display: grid;
  margin: var(--standardMargin);
  margin-left: 0rem;
  min-width: 7rem;
}

.orderAddContainer {
  align-self: center;
  text-align: center;
}

#orderTitle {
  border: var(--borderStyle);
  border-bottom: hidden;

  background-color: var(--headerColour);

  text-align: center;
  font-family: var(--titleFont);
  font-size: var(--titleFontSize);
  font-weight: var(--titleFontWeight);

  align-items: center;
  display: flex;
  flex-direction: column;
  justify-content: center;

  flex: 1;
}

#order {
  border: var(--borderStyle);
}

.orderContainer {
  display: grid;
  grid-template-areas:
    "orderItems"
    "subTotal";
  grid-template-rows: auto min-content;
  font-family: var(--categoryFont);
  font-weight: var(--categoryFontWeight);
}

.orderItems {
  grid-area: orderItems;
  display: flex;
  flex-direction: column;
  height: auto;
  overflow: hidden;
  overflow-y: scroll;
}

.hiddenOrderItem {
  margin-top: var(--standardMargin);
}

.orderItem {
  margin: var(--standardMargin);
  margin-top: 0rem;
  padding: var(--standardMargin);
  border: var(--borderStyle);
  width: auto;

  display: grid;
  grid-template-areas: "nameAndAddons priceAndPriceEach orderItemRemove";
  grid-template-columns: auto min-content min-content;
}

.nameAndAddons {
  grid-area: nameAndAddons;
  display: grid;
  grid-template-areas:
    "orderItemName"
    "orderItemAddons";
  grid-template-rows: auto min-content;
}

.orderItemName {
  font-size: 1.2rem;
}

.orderItemAddons {
  font-size: 0.8rem;
}

.priceAndPriceEach {
  margin-right: var(--standardMargin);
  grid-area: priceAndPriceEach;
  width: min-content;
  white-space: nowrap;
  text-align: right;

  display: grid;
  grid-template-areas:
    "orderItemPrice"
    "orderItemPriceEach";
  grid-template-rows: auto min-content;
}

.orderItemPrice {
  grid-area: orderItemPrice;
}

.orderItemPriceEach {
  grid-area: orderItemPriceEach;
  font-size: 0.8rem;
}

.orderItemRemove {
  grid-area: orderItemRemove;
  border: var(--borderStyle);
  width: 2.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.orderItemRemoveText {
  font-size: 2rem;
  font-weight: var(--categoryFontWeight);
}

.subTotal {
  border-top: var(--borderStyle);
  grid-area: subTotal;
  display: grid;
  grid-template-areas:
    "subTotalTop"
    "subTotalBottom";
  grid-template-rows: auto auto;
}

.subTotalTop {
  grid-area: subTotalTop;
  display: grid;
  grid-template-areas: "subTotalTitle subTotalPrice";
  grid-template-columns: auto auto;
  font-size: 2rem;
  margin: 0.5rem 0rem 0.5rem 0rem;
}

.subTotalTitle {
  grid-area: subTotalTitle;
  margin-left: var(--standardMargin);
}

.subTotalPrice {
  grid-area: subTotalPrice;
  text-align: right;
  margin-right: var(--standardMargin);
}

.subTotalBottom {
  grid-area: subTotalBottom;
  display: grid;
  grid-template-areas: "plusMinus card cash";
  grid-template-columns: min-content 1fr 1fr;
}

.plusMinus {
  grid-area: plusMinus;
  display: flex;
  align-items: center;
}

.plusMinusContainer {
  margin: var(--standardMargin);
  margin-top: 0rem;
  border: var(--borderStyle);
  font-size: 2rem;
  text-align: center;
  width: 2.5rem;
}

.card {
  grid-area: card;
  display: flex;
  align-items: center;
  width: 100%;
}

.cardContainer {
  margin: var(--standardMargin);
  margin-left: 0rem;
  margin-top: 0rem;

  border: var(--borderStyle);
  font-size: 2rem;
  text-align: center;
  width: 100%;
}

.cash {
  grid-area: cash;
  display: flex;
  align-items: center;
  width: 100%;
}

.cashContainer {
  margin: var(--standardMargin);
  margin-left: 0rem;
  margin-top: 0rem;
  border: var(--borderStyle);
  font-size: 2rem;
  text-align: center;
  width: 100%;
}

.keypadGrid {
  display: grid;
  grid-template-areas:
    "keypadDisplay keypadDisplay keypadClose"
    "keypadMinus keypadPlus keypadBack"
    "keypad7 keypad8 keypad9"
    "keypad4 keypad5 keypad6"
    "keypad1 keypad2 keypad3"
    "keypad0 keypad0 keypadEnter";

  row-gap: var(--standardMargin);
  column-gap: var(--standardMargin);
  padding: var(--standardMargin);

  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1.2fr 1fr 1fr 1fr 1fr 1fr;
}

.keypadButton {
  border: var(--borderStyle);

  /* Center text */
  display: flex;
  justify-content: center;
  align-items: center;
}

.keypadDisplay {
  border: var(--borderStyle);
  grid-area: keypadDisplay;
  font-size: 3rem;
  font-weight: var(--categoryFontWeight);
  /* Center text */
  display: grid;
  grid-template-areas: "keypadDisplayText keypadDisplayTextValue";
  align-items: center;
}

.keypadDisplayText {
  height: min-content;
  margin: var(--standardMargin);
  margin-right: 0rem;

  width: min-content;
}

.keypadDisplayTextValue {
  height: min-content;
  margin: var(--standardMargin);
  margin-left: 0rem;

  text-align: right;
}

.keypadText {
  font-size: 2.5rem;
}

.keypadClose {
  grid-area: keypadClose;
}
.keypadMinus {
  grid-area: keypadMinus;
}
.keypadPlus {
  grid-area: keypadPlus;
}
.keypadBack {
  grid-area: keypadBack;
}
.keypad7 {
  grid-area: keypad7;
}
.keypad8 {
  grid-area: keypad8;
}
.keypad9 {
  grid-area: keypad9;
}
.keypad4 {
  grid-area: keypad4;
}
.keypad5 {
  grid-area: keypad5;
}
.keypad6 {
  grid-area: keypad6;
}
.keypad1 {
  grid-area: keypad1;
}
.keypad2 {
  grid-area: keypad2;
}
.keypad3 {
  grid-area: keypad3;
}
.keypadDecimal {
  grid-area: keypadDecimal;
}
.keypad0 {
  grid-area: keypad0;
}
.keypadEnter {
  grid-area: keypadEnter;
}

.payCash {
  display: grid;
  grid-template-areas:
    "payCashOptions"
    "payCashChange";
  grid-template-rows: auto min-content;
}

.payCashOptions {
  grid-area: payCashOptions;
  display: grid;
  grid-template-areas:
    "payCash50 payCash20"
    "payCash10 payCash5"
    "payCashCustom payCashCustom"
    "payCashExit payCashExit";
  font-size: 2.5rem;
  font-weight: var(--categoryFontWeight);
  font-family: var(--categoryFont);
  grid-template-rows: 1fr 1fr min-content 0.8fr;
  grid-template-columns: 1fr 1fr;
  margin: var(--standardMargin);
  row-gap: var(--standardMargin);
  column-gap: var(--standardMargin);
}

.payCash50 {
  grid-area: payCash50;
}

.payCash20 {
  grid-area: payCash20;
}

.payCash10 {
  grid-area: payCash10;
}

.payCash5 {
  grid-area: payCash5;
}

.payCashPreset {
  border: var(--borderStyle);
  display: flex;
  justify-content: center;
  align-items: center;
}

.payCashCustom {
  border: var(--borderStyle);
  grid-area: payCashCustom;
  display: flex;
  justify-content: center;
  align-items: center;
}

.payCashExit {
  border: var(--borderStyle);
  grid-area: payCashExit;
  display: flex;
  justify-content: center;
  align-items: center;
}

.payCashChange {
  border: var(--borderStyle);
  border-bottom: none;
  border-right: none;
  border-left: none;
  grid-area: payCashChange;
  height: min-content;
}

.payCashChange {
  display: grid;
  grid-template-areas: "payCashChangeTitle payCashChangeValue";
  font-size: 2rem;
}

.payCashChangeTitle {
  margin: var(--standardMargin);
  grid-area: payCashChangeTitle;
}

.payCashChangeValue {
  margin: var(--standardMargin);
  grid-area: payCashChangeValue;
  text-align: right;
}

.reports {
  display: grid;
  grid-template-areas:
    "reportsTitleBar"
    "reportsOrders";

  grid-template-rows: auto calc(100vh - var(--headerHeight));

  width: 100%;
}

.reportsTitleBar {
  height: var(--headerHeight);
  grid-area: "reportsTitleBar";
  border: var(--borderStyle);
}

.reportsOrders {
  grid-area: "reportsOrders";
  border: var(--borderStyle);
  border-top: none;
  overflow: hidden;
  overflow-y: scroll;

  justify-content: center;

  display: flex;
  flex-wrap: wrap;
  gap: var(--standardMargin);
  padding: var(--standardMargin);
}

.reportsOrder {
  border: var(--borderStyle);
  width: calc((100% / 3) - 2 * var(--standardMargin));
  height: 10em;
  display: grid;
  grid-template-areas:
  "orderNo orderNo delete"
  "timeTitle timeValue timeValue"
  "subtotalTitle subtotalValue subtotalValue"
  "paymentTitle paymentValue paymentValue"
  "items items items";
  grid-template-columns: auto auto auto;
  grid-template-rows: auto auto auto auto;

  font-size: 1rem;
  font-weight: var(--categoryFontWeight);
}

.reportsOrderTableTitle {
  width: min-content;
  align-self: start;
  border: var(--borderStyled);

}

.reportsOrderTableValue {
  border: var(--borderStyled);

  text-align: right;
}

.reportsOrderTableOrderNo {
  grid-area: orderNo;

  border: var(--borderStyled)
}

.reportsOrderTableDeleteOrder {
  grid-area: delete;
}

.reportsOrderTableTitleTime {
  grid-area: timeTitle;
}

.reportsOrderTableValueTime {
  grid-area: timeValue;
}

.reportsOrderTableTitleSubTotal {
  grid-area: subtotalTitle;
}

.reportsOrderTableValueSubTotal {
  grid-area: subtotalValue;
}

.reportsOrderTableTitlePayment {
  grid-area: paymentTitle;
}

.reportsOrderTableValuePayment {
  grid-area: paymentValue;
}

.reportsOrderTableItems {
  grid-area: items;
}
